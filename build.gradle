
plugins {
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
    id 'java'
    id 'idea'
    id 'java-library'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

group = 'com.dys'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "Hoxton.SR7")
    nexus = System.getProperty('nexus.url')
}

project.dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

gradle.allprojects {
    repositories {
        // mavenCentral()
        mavenLocal()
        maven {
            url  "${nexus}/repository/maven-public/"
            credentials {
                username 'admin'
                password 'Dingyingsi1988!'
            }
            allowInsecureProtocol true
            // println "all projects repository url: " + url
        }
    }
}

project.subprojects {

    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'java-library'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    group = 'com.dys'
    version = '0.0.1-SNAPSHOT'

    [compileJava, compileTestJava, compileGroovy, compileTestGroovy, javadoc]*.options*.encoding = 'UTF-8'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation group: 'com.google.inject', name: 'guice', version: '4.2.3'

    }

    repositories {
        mavenLocal()

        maven {
            url "${nexus}/repository/maven-public/"
            credentials {
                username 'admin'
                password 'Dingyingsi1988!'
            }
            allowInsecureProtocol true
        }
    }


    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    test {
        useJUnitPlatform()
    }

    test {
        useJUnitPlatform()
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }


    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourcesJar {
                    classifier "sources"
                }
            }
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }

    publishing {
        publications {
            binary(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                //若是war包，就写components.web,若是jar包，就写components.java
                from components.java
            }

            binaryAndSources(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java

                artifact sourcesJar
                artifact javadocJar
            }

        }
        repositories {
            maven {
                credentials {
                    username 'admin'
                    password 'Dingyingsi1988!'
                }
                allowInsecureProtocol true

                if (project.version.endsWith('-SNAPSHOT')) {
                    url "${nexus}/repository/maven-snapshots/"
                } else {
                    url "${nexus}/repository/maven-releases/"
                }
            }
        }
    }
}
