framework.redisson.database = 0
framework.redisson.password =
framework.redisson.mode = cluster

framework.redisson.pool.connection-minimum-idle-size = 8
framework.redisson.pool.connect-timeout = 3000
framework.redisson.pool.idle-connection-timeout = 5000
framework.redisson.pool.connection-pool-size = 10

framework.redisson.single.address = 10.2.55.7:6379

framework.redisson.timeout = 5000
framework.redisson.cluster.address = localhost:6379,localhost:6380,localhost:6381,localhost:6382,localhost:6383,localhost:6384
framework.redisson.cluster.scan-interval = 1000
framework.redisson.cluster.read-mode = SLAVE
framework.redisson.cluster.retry-attempts = 3
framework.redisson.cluster.failed-slave-check-interval = 3
framework.redisson.cluster.slave-connection-pool-size = 64
framework.redisson.cluster.master-connection-pool-size = 64
framework.redisson.cluster.retry-interval = 1500

framework.redisson.sentinel.master-name = business-master
framework.redisson.sentinel.address =
framework.redisson.sentinel.master-only-write = true
framework.redisson.sentinel.failed-slave-check-interval = 1000
framework.redisson.sentinel.master-Connection-pool-size = 10
framework.redisson.sentinel.slave-Connection-pool-size = 10

framework.kafka.producer.enabled = true
framework.kafka.producer.servers = localhost:9092
framework.kafka.producer.retries = 1
framework.kafka.producer.batch.size = 4096
framework.kafka.producer.linger = 1
framework.kafka.producer.buffer.memory = 40960
framework.user.action.kafka.producer.topic = framework-user-action-topic

framework.kafka.consumer.enabled = true
framework.kafka.consumer.servers = 10.2.55.21:9092
framework.kafka.consumer.enable.auto.commit = true
framework.kafka.consumer.session.timeout = 6000
framework.kafka.consumer.auto.commit.interval = 100
framework.kafka.consumer.auto.offset.reset = latest
framework.kafka.consumer.group.id = framework-user-action
framework.kafka.consumer.concurrency = 3
framework.user.action.kafka.consumer.topic = framework-user-action-topic

framework.datasource.first.enabled = true
framework.datasource.first.label = first
framework.datasource.first.url = jdbc:mysql://localhost:3306/first?serverTimezone=Asia/Shanghai&useFastDateParsing=false&characterEncoding=UTF-8&useUnicode=true&zeroDateTimeBehavior=convertToNull&useSSL=false
framework.datasource.first.username = first
framework.datasource.first.password = first
framework.datasource.first.initialSize = 10
framework.datasource.first.maxTotal = 20
framework.datasource.first.maxIdle = 30
framework.datasource.first.minIdle = 10
framework.datasource.first.maxWaitMillis = 5000
framework.datasource.first.removeAbandonedOnMaintenance = true
framework.datasource.first.removeAbandonedOnBorrow = true
framework.datasource.first.jdbcCompliantTruncation = false

framework.datasource.second.enabled = true
framework.datasource.second.label = second
framework.datasource.second.url = jdbc:mysql://localhost:3309/second?serverTimezone=Asia/Shanghai&useFastDateParsing=false&characterEncoding=UTF-8&useUnicode=true&zeroDateTimeBehavior=convertToNull&useSSL=false
framework.datasource.second.username = second
framework.datasource.second.password = second
framework.datasource.second.initialSize = 10
framework.datasource.second.maxTotal = 20
framework.datasource.second.maxIdle = 30
framework.datasource.second.minIdle = 10
framework.datasource.second.maxWaitMillis = 5000
framework.datasource.second.removeAbandonedOnMaintenance = true
framework.datasource.second.removeAbandonedOnBorrow = true
framework.datasource.second.jdbcCompliantTruncation = false

framework.rocketmq.producer.enabled = false
framework.rocketmq.producer.producerGroup = dys_producer_group
framework.rocketmq.producer.namesrvAddr = localhost:9876
framework.rocketmq.producer.maxMessageSize = 4096
framework.rocketmq.producer.sendMsgTimeout = 300000
framework.rocketmq.producer.retryTimesWhenSendFailed = 2

framework.rocketmq.consumer.enabled = true
framework.rocketmq.consumer.namesrvAddr = localhost:9876
framework.rocketmq.consumer.consumerGroup = dys_consumer_group
framework.rocketmq.consumer.consumeThreadMin = 20
framework.rocketmq.consumer.consumeThreadMax = 64
framework.rocketmq.consumer.topicAndTags = dys_topic:*
framework.rocketmq.consumer.consumeMessageBatchMaxSize = 10


